/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Lab3;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author ADMIN
 */
public class Frmht extends javax.swing.JFrame {

    FrmLogin Frm;
    Frmcauhoi Frm2;
    Timer t;
    int timeleft;
    int min, sec;

    /**
     * Creates new form Frmht
     */
    public Frmht() {
        initComponents();
        setSize(600, 400);
        setResizable(false);
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 571, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 368, Short.MAX_VALUE)
        );

        getContentPane().add(jDesktopPane1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        jMenuItem1.setText("Login");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        int ex = JOptionPane.showConfirmDialog(this, "Bạn muốn thoát", "Exit", JOptionPane.YES_NO_OPTION);
        if (ex == JOptionPane.YES_NO_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:

        if (Frm == null || Frm.isClosed()) {
            Frm = new FrmLogin();
            jDesktopPane1.add(Frm);
            Frm.setVisible(true);
            Frm.setLocation(125, 70);

        }

        Frm.btLogin.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (!Frm.txtUse.getText().equals("admin")) {
                    JOptionPane.showMessageDialog(Frm, "Use Name không tồn tại !!!");
                    Frm.txtUse.requestFocus();
                    return;
                } else if (!Frm.txtpass.getText().equals("1")) {
                    JOptionPane.showMessageDialog(Frm, "Sai Password !!!");
                    Frm.txtpass.requestFocus();
                    return;
                } else {
                    JOptionPane.showMessageDialog(Frm, "Đăng nhập thành công.");
                    Frm.dispose(); 

                    //chay bang cau hoi
                    if (Frm2 == null || Frm2.isClosed()) {
                        Frm2 = new Frmcauhoi();
                        jDesktopPane1.add(Frm2);
                        Frm2.setVisible(true);
                        Frm2.setLocation(100, 25);
                        timeleft = 10;
                        t = new Timer(1000, new ActionListener() {
                            @Override
                            public void actionPerformed(ActionEvent e) {
                                timeleft--;
                                min = timeleft / 60;
                                sec = timeleft - (min * 60);
                                Frm2.lbtime.setText(min + ":" + sec);
                                if (timeleft == 0) {
                                    JOptionPane.showMessageDialog(Frm2, "Da het thoi gian lam bai");
                                    String st = "";
                                    int a = 0;

                                    if (Frm2.rd1.isSelected()) {
                                        st = st + "Câu 1: Hình vuông (SAI)\n";
                                    } else if (Frm2.rd2.isSelected()) {
                                        st = st + "Câu 1: Hình tròn (SAI)\n";
                                    } else if (Frm2.rd3.isSelected()) {
                                        st = st + "Câu 1: Hình cầu (Đúng)\n";
                                        a += 5;
                                    } else if (Frm2.rd4.isSelected()) {
                                        st = st + "Câu 1: Hình nón (SAI)\n";
                                    }
                                    if (Frm2.rd5.isSelected()) {
                                        st = st + "Câu 2: giàu (SAI)";
                                    } else if (Frm2.rd6.isSelected()) {
                                        st = st + "Câu 2: hotgirl giàu (Đúng)";
                                        a += 5;
                                    } else if (Frm2.rd7.isSelected()) {
                                        st = st + "Câu 2: hotgirl (SAI)";
                                    } else if (Frm2.rd8.isSelected()) {
                                        st = st + "Câu 2: xấu gái";
                                    }
                                    t.stop();
                                    JOptionPane.showMessageDialog(Frm2, "Đáp án đã chọn \n" + st + "\n Điểm của bạn là: " + a);
                                    Frm2.dispose();
                                }
                            }
                        });
                        t.start();
                        Frm2.btSumbit.addActionListener(new ActionListener() {
                            @Override
                            public void actionPerformed(ActionEvent e) {
                                String st = "";
                                int a = 0;

                                if (Frm2.rd1.isSelected()) {
                                    st = st + "Câu 1: Hình vuông (SAI)\n";
                                } else if (Frm2.rd2.isSelected()) {
                                    st = st + "Câu 1: Hình tròn (SAI)\n";
                                } else if (Frm2.rd3.isSelected()) {
                                    st = st + "Câu 1: Hình cầu (Đúng)\n";
                                    a += 5;
                                } else if (Frm2.rd4.isSelected()) {
                                    st = st + "Câu 1: Hình nón (SAI)\n";
                                }
                                if (Frm2.rd5.isSelected()) {
                                    st = st + "Câu 2: giàu (SAI)";
                                } else if (Frm2.rd6.isSelected()) {
                                    st = st + "Câu 2: hotgirl-giàu (Đúng)";
                                    a += 5;
                                } else if (Frm2.rd7.isSelected()) {
                                    st = st + "Câu 2: giàu (SAI)";
                                } else if (Frm2.rd8.isSelected()) {
                                    st = st + "Câu 2: xấu gái";
                                }
                                t.stop();
                                JOptionPane.showMessageDialog(Frm2, "Đáp án đã chọn \n" + st + "\n Điểm của bạn là: " + a);
                                Frm2.dispose();
                            }

                        });
                    }

                }
            }

        });
        Frm.btExit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int ex2 = JOptionPane.showConfirmDialog(Frm, "Bạn muốn thoát ???", "Exit", JOptionPane.YES_NO_OPTION);
                if (ex2 == JOptionPane.YES_NO_OPTION) {
                    Frm.dispose();
                }
            }
        });

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frmht.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frmht.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frmht.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frmht.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frmht().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    // End of variables declaration//GEN-END:variables

}
